<?php

namespace Proxies\__CG__\tuttifruttiweb\PlayerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Player extends \tuttifruttiweb\PlayerBundle\Entity\Player implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'fbId', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'name', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'email', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'registrationId', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'dateInserted');
        }

        return array('__isInitialized__', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'fbId', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'name', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'email', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'registrationId', '' . "\0" . 'tuttifruttiweb\\PlayerBundle\\Entity\\Player' . "\0" . 'dateInserted');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Player $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function set($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set', array($data));

        return parent::set($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getFbId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getFbId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFbId', array());

        return parent::getFbId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationId($registrationId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationId', array($registrationId));

        return parent::setRegistrationId($registrationId);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationId', array());

        return parent::getRegistrationId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateInserted($dateInserted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateInserted', array($dateInserted));

        return parent::setDateInserted($dateInserted);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateInserted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateInserted', array());

        return parent::getDateInserted();
    }

}
